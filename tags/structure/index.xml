<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>structure on Ben Selby</title>
    <link>https://benmatselby.dev/tags/structure/</link>
    <description>Recent content in structure on Ben Selby</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Apr 2019 15:50:51 +0100</lastBuildDate><atom:link href="https://benmatselby.dev/tags/structure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Software engineering team structures</title>
      <link>https://benmatselby.dev/post/software-engineering-team-structure/</link>
      <pubDate>Sat, 20 Apr 2019 15:50:51 +0100</pubDate>
      
      <guid>https://benmatselby.dev/post/software-engineering-team-structure/</guid>
      <description>This post aims to outline a useful structure for software engineering teams. This feels like a fairly standard structure, or at least with the teams Iâ€™ve had exposure to. The main principles here are: to keep communication flowing; accountability is defined and understood; and the ability to scale horizontally when your teams become saturated (and for this to be easily quantified).
For the purpose of this article, a team is going to be a product based software engineering team.</description>
    </item>
    
  </channel>
</rss>
