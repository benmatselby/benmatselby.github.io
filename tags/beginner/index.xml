<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beginner on Ben Selby</title>
    <link>https://benmatselby.dev/tags/beginner/</link>
    <description>Recent content in Beginner on Ben Selby</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Nov 2022 11:24:37 +0000</lastBuildDate>
    <atom:link href="https://benmatselby.dev/tags/beginner/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction to APIs</title>
      <link>https://benmatselby.dev/post/2022/introduction-to-apis/</link>
      <pubDate>Mon, 14 Nov 2022 11:24:37 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2022/introduction-to-apis/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written this post to help some of my colleagues, who traditionally don&amp;rsquo;t work with APIs to understand some foundations. They are designers, product managers etc. If you&amp;rsquo;ve used APIs before, this post &lt;em&gt;is probably not for you&lt;/em&gt; ;-).&lt;/p&gt;&#xA;&lt;p&gt;An &amp;ldquo;Application Programming Interface&amp;rdquo; (API) allows two software systems to communicate in an agreed manner, set out by open specifications.&lt;/p&gt;&#xA;&lt;p&gt;We are going to focus on basic concepts to allow us to be able to communicate effectively about APIs, in an engineering product team. There will be a plethora of links to other sites with better content than this if you want to learn more.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Terratest to test your infrastructure</title>
      <link>https://benmatselby.dev/post/terratest/</link>
      <pubDate>Sun, 18 Apr 2021 20:01:51 +0100</pubDate>
      <guid>https://benmatselby.dev/post/terratest/</guid>
      <description>&lt;p&gt;This post is going to get you started with using &lt;a href=&#34;https://terratest.gruntwork.io&#34;&gt;Terratest&lt;/a&gt; to help test your infrastructure changes. Terratest describes itself as:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A Go library that provides patterns and helper functions for testing infrastructure, with 1st-class support for Terraform, Packer, Docker, Kubernetes, AWS, GCP, and more.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Now that infrastructure is becoming code and configuration, we want to write tests that check that our infrastructure code works as intended. This is where Terratest can help. What I personally like about Terratest is the fact it can test many different systems. This means my team can utilise one tool for many testing scenarios.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terraform knowledge to get you through the day</title>
      <link>https://benmatselby.dev/post/terraform-101/</link>
      <pubDate>Sun, 11 Apr 2021 09:31:36 +0100</pubDate>
      <guid>https://benmatselby.dev/post/terraform-101/</guid>
      <description>&lt;p&gt;As part of the &amp;ldquo;&lt;a href=&#34;#see-also&#34;&gt;Getting through the day&lt;/a&gt;&amp;rdquo; series, this post is going to provide basic Terraform knowledge. We are going to setup a Terraform project that allows you to manage your repos in GitHub.&lt;/p&gt;&#xA;&lt;p&gt;I didn&amp;rsquo;t want to assume that you had an AWS, Azure, or Google Cloud account, but a GitHub account seemed more realistic.&lt;/p&gt;&#xA;&lt;p&gt;This post assumes that you have &lt;a href=&#34;https://www.terraform.io/downloads.html&#34;&gt;installed Terraform on your system&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cli&#34;&gt;CLI&lt;/h2&gt;&#xA;&lt;p&gt;Now that you have Terraform installed, you should be able to run &lt;code&gt;terraform&lt;/code&gt; in your terminal. For this tutorial I am running the following version:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
