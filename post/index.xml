<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ben Selby</title>
    <link>https://benmatselby.dev/post/</link>
    <description>Recent content in Posts on Ben Selby</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Jun 2025 22:42:42 +0100</lastBuildDate>
    <atom:link href="https://benmatselby.dev/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Two weeks with the GitHub Coding Agent</title>
      <link>https://benmatselby.dev/post/2025/working-with-agentic-coding-agent/</link>
      <pubDate>Sat, 28 Jun 2025 22:42:42 +0100</pubDate>
      <guid>https://benmatselby.dev/post/2025/working-with-agentic-coding-agent/</guid>
      <description>&lt;p&gt;For the last two weeks, we&amp;rsquo;ve been learning to work with the new &lt;a href=&#34;https://github.blog/news-insights/product-news/github-copilot-meet-the-new-coding-agent/&#34;&gt;GitHub Coding Agent&lt;/a&gt;. This is a shift for me. Moving from working with AI in my IDE, to actually delegating entire tasks to an agent that works asynchronously in the cloud. The aim is to be more efficient, and provide a bigger impact for the business.&lt;/p&gt;&#xA;&lt;p&gt;From now on we will call the GitHub Coding Agent &amp;ldquo;Mx Robot&amp;rdquo;. Why? I think you need to think of this as a colleague that may or may not deliver what you need. I see in the community we are comparing a Coding Agent to be like a Junior Developer, and this makes sense to be at the moment. I&amp;rsquo;m learning new ways to think of solving the issue, which you also get with Junior engineers (fresh eyes!).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dependency Management</title>
      <link>https://benmatselby.dev/post/2025/managing-dependencies/</link>
      <pubDate>Sat, 18 Jan 2025 09:19:07 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2025/managing-dependencies/</guid>
      <description>&lt;p&gt;This post is going to be an advocate for managing your project dependencies and ensuring they are up to date. This seems to be a controversial topic, so I suspect we won&amp;rsquo;t all agree. I think it comes down to your personal experience as to how you might view dependencies.&lt;/p&gt;&#xA;&lt;p&gt;Back in my early career days, I had to deal with fixing dependencies when a security exploit was discovered in one of them. It was a real pain, and I never wanted to do it again under those circumstances: super stressful and time-sensitive. So, I made a firm decision: keeping dependencies up to date was the way to go.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Prolific CLI</title>
      <link>https://benmatselby.dev/post/2024/the-prolific-cli/</link>
      <pubDate>Fri, 28 Jun 2024 13:26:21 +0100</pubDate>
      <guid>https://benmatselby.dev/post/2024/the-prolific-cli/</guid>
      <description>&lt;p&gt;This post is going to be an introduction to the &lt;a href=&#34;https://github.com/prolific-oss/cli&#34;&gt;Prolific CLI&lt;/a&gt; for data collectors/researchers.&lt;/p&gt;&#xA;&lt;p&gt;So &lt;a href=&#34;https://www.prolific.com/&#34;&gt;Prolific&lt;/a&gt; have this to say on their website:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Easily find vetted research participants and AI taskers at scale.&lt;/li&gt;&#xA;&lt;li&gt;An unrivalled participant pool.&lt;/li&gt;&#xA;&lt;li&gt;Data quality you can depend on.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;OK, so you want to collect some data to train your AI model (I mean, who doesn&amp;rsquo;t nowadays?), then Prolific is the place to start. The CLI is aimed at:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running Ubuntu on a MacBook Pro</title>
      <link>https://benmatselby.dev/post/2024/ubuntu-with-mac-keyboard-combo/</link>
      <pubDate>Sun, 26 May 2024 09:36:28 +0100</pubDate>
      <guid>https://benmatselby.dev/post/2024/ubuntu-with-mac-keyboard-combo/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Note: This post is a work in progress, and mainly for my notes. It&amp;rsquo;s current as of May 2024!&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I had a ten year old MacBook Pro lying around not really doing anything. It wasn&amp;rsquo;t doing very well with the macOS either, so decided to run Ubuntu on it. Ubuntu was my main development environment from about 2008 until about 2011, and I miss it.&lt;/p&gt;&#xA;&lt;p&gt;However, as a life long Mac user, the keyboard shortcuts and combinations are too much muscle memory for me to try and move away from. Also, this is a fun side project. I&amp;rsquo;m not entirely moving over to Ubuntu, so I don&amp;rsquo;t really want to change my muscle memory too much.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stop tracking changes to certain files in Git</title>
      <link>https://benmatselby.dev/post/2024/git-stop-tracking-changes/</link>
      <pubDate>Sat, 04 May 2024 07:59:32 +0100</pubDate>
      <guid>https://benmatselby.dev/post/2024/git-stop-tracking-changes/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;ve used &lt;code&gt;git&lt;/code&gt; before, you&amp;rsquo;re probably aware of the &lt;code&gt;.gitignore&lt;/code&gt; file. This is what the &lt;a href=&#34;https://git-scm.com/docs/gitignore&#34;&gt;manual&lt;/a&gt; has to say:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A gitignore file specifies intentionally untracked files that Git should ignore.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;This file is usually tracked in your Git repo, so every contributor ignores the same files. Interestingly, you can also have a global ignore file in your home directory too &lt;code&gt;~/.gitignore&lt;/code&gt;. I have a &lt;a href=&#34;https://github.com/benmatselby/dotfiles/blob/main/git/.gitignore&#34;&gt;global ignore file&lt;/a&gt; for ignoring basic IDE files.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Working with Zed for a week</title>
      <link>https://benmatselby.dev/post/2024/working-with-zed/</link>
      <pubDate>Tue, 30 Jan 2024 18:48:56 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2024/working-with-zed/</guid>
      <description>&lt;p&gt;I took &lt;a href=&#34;https://zed.dev/&#34;&gt;Zed&lt;/a&gt; for a spin this week, and this post covers what I noticed whilst using it as my day-to-day editor.&lt;/p&gt;&#xA;&lt;quote class=&#34;pullquote&#34;&gt;&#xA;  I love it, and I&#39;m probably going to stay with it (but I miss a debugger).&#xA;&lt;/quote&gt;&#xA;&#xA;&lt;p&gt;This is what Zed is:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter. It&amp;rsquo;s also open source.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;projects-worked-on&#34;&gt;Projects worked on:&lt;/h2&gt;&#xA;&lt;p&gt;These are the projects I managed to work on this week with Zed:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Show your working out</title>
      <link>https://benmatselby.dev/post/2024/show-your-working-out/</link>
      <pubDate>Mon, 22 Jan 2024 18:39:50 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2024/show-your-working-out/</guid>
      <description>&lt;p&gt;Does anyone remember what your Maths teacher used to say?&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Show your working out!&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;I mean, I bet they said more than that, but this is what I remembered. I think we used to get marked down if you just provided the answer. You got more marks when you showed how you derived your answer.&lt;/p&gt;&#xA;&lt;p&gt;This post is a plea for software engineers to do the same when answering technical questions, or debugging an issue in group communication channels.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A case for using a Makefile in your project</title>
      <link>https://benmatselby.dev/post/2024/a-case-for-a-makefile/</link>
      <pubDate>Tue, 16 Jan 2024 18:10:20 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2024/a-case-for-a-makefile/</guid>
      <description>&lt;p&gt;This post is going to present a case for using a &lt;code&gt;Makefile&lt;/code&gt; in your project. This will be the top-level task runner for your project. You can use &lt;code&gt;make&lt;/code&gt; to run all of your project tasks such as building, linting, testing, and deploying your project. It doesn&amp;rsquo;t matter what language your project is written in.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-a-makefile&#34;&gt;What is a Makefile?&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Make gets its knowledge of how to build your program from a file called the makefile, which lists each of the non-source files and how to compute it from other files. When you write a program, you should write a makefile for it, so that it is possible to use Make to build and install the program.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automating the startup of a dev workflow</title>
      <link>https://benmatselby.dev/post/2024/automating-the-startup-of-a-dev-workflow/</link>
      <pubDate>Tue, 02 Jan 2024 18:13:03 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2024/automating-the-startup-of-a-dev-workflow/</guid>
      <description>&lt;p&gt;Hopefully, this is the first of many small posts showing how I automate my workflow.&lt;/p&gt;&#xA;&lt;p&gt;Back around 2008, I had a mentor/buddy for my new job. Rys. He was a wonderful, knowledgeable, and supportive buddy who always seemed to be one step ahead.&lt;/p&gt;&#xA;&lt;p&gt;One day he noticed that I came into the office each day, opened the terminal, and created x amount of tabs, which I then named (So I knew what each terminal was there for, e.g. logs, database, git, and codebases etc).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Naming Slack huddles</title>
      <link>https://benmatselby.dev/post/2023/naming-slack-huddles/</link>
      <pubDate>Fri, 22 Dec 2023 21:28:17 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2023/naming-slack-huddles/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m pair programming more and more nowadays. One thing that features heavily in pair programming is a Slack huddle. My main recommendation is to &lt;strong&gt;name the Slack huddle&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Slack is a very useful tool to use when pair programming. For me, it&amp;rsquo;s simply the ability to draw on each others screen. Trying to describe the many buttons, areas of an IDE, or where to change a line of code is painful. Being able to draw on the screen is not.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mephisto and dev containers</title>
      <link>https://benmatselby.dev/post/2023/mephisto-and-devcontainers/</link>
      <pubDate>Sun, 06 Aug 2023 15:39:20 +0100</pubDate>
      <guid>https://benmatselby.dev/post/2023/mephisto-and-devcontainers/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m currently looking into what &lt;a href=&#34;https://mephisto.ai&#34;&gt;Mephisto&lt;/a&gt; can do. Mephisto describes itself as&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Mephisto was designed from the ground up to work with different &amp;ldquo;crowd providers&amp;rdquo;. You can use Amazon Mechanical Turk, an internal platform for your organization, or something else. Additionally, launch your tasks on Heroku, EC2, etc.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;So I wanted to check it out and run it locally to see for myself. I started with the &lt;a href=&#34;https://mephisto.ai/docs/guides/quickstart/&#34;&gt;10-minute Quickstart&lt;/a&gt; guide but hit issues with the installation of dependencies. I tried Python 3.8, and 3.11, and with &lt;code&gt;pip install&lt;/code&gt; and &lt;code&gt;poetry install&lt;/code&gt;. I am fairly confident this is to do with my Apple Silicon Mac (I have issues with other Python projects too!). So rather than get bogged down in that world, I thought it would be easier to spin up a dev container in VS Code. This post is going to show you how you can do that (and provides a reference for me as to what the configuration is).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up k9s skins for different Kubernetes clusters</title>
      <link>https://benmatselby.dev/post/2023/setting-up-k9s-skins-for-environments/</link>
      <pubDate>Fri, 31 Mar 2023 18:24:57 +0100</pubDate>
      <guid>https://benmatselby.dev/post/2023/setting-up-k9s-skins-for-environments/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This post was updated on June 19th 2024, to document the latest way to do this.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;This post is going to show you how to define different skins for &lt;a href=&#34;https://k9scli.io&#34;&gt;k9s&lt;/a&gt;, so you can quickly see which environment you&amp;rsquo;re working on.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;k9s&lt;/code&gt; is a terminal application that allows you to manage your &lt;a href=&#34;https://kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt; clusters. So if you&amp;rsquo;re managing your production cluster, for example, you probably want to take extra care of what you&amp;rsquo;re doing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating custom metrics from a trace in Datadog</title>
      <link>https://benmatselby.dev/post/2023/creating-custom-metric-from-trace-in-datadog/</link>
      <pubDate>Tue, 07 Mar 2023 19:23:42 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2023/creating-custom-metric-from-trace-in-datadog/</guid>
      <description>&lt;p&gt;Recently, I wanted to create a monitor from a trace in &lt;a href=&#34;https://www.datadoghq.com&#34;&gt;Datadog&lt;/a&gt;. When creating an APM monitor, you can specify the service, and the resource, but nothing else. This didn&amp;rsquo;t cater for what I wanted to do. So this post is going to show you how you can create a custom metric, and then use that in your monitor.&lt;/p&gt;&#xA;&lt;p&gt;Once logged into Datadog, you want to navigate to &lt;code&gt;APM&lt;/code&gt; and then &lt;code&gt;Setup &amp;amp; Configuration&lt;/code&gt;. On the top bar, you should be able to see &lt;code&gt;Generate Metrics&lt;/code&gt;. Go ahead and click on that link.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Books 2023</title>
      <link>https://benmatselby.dev/post/books-2023/</link>
      <pubDate>Sun, 01 Jan 2023 22:23:01 +0100</pubDate>
      <guid>https://benmatselby.dev/post/books-2023/</guid>
      <description>&lt;p&gt;So, the numbers are in for 2022, and I read substantially less than the 20 books I set out to read. I did really well in Quarter 1, and then it fell to pieces after that. I traded fiction for technical books, and it all just fizzled out.&lt;/p&gt;&#xA;&lt;p&gt;So this year, I&amp;rsquo;m aiming to read 10 books.&lt;/p&gt;&#xA;&lt;div class=&#34;recommendation&#34;&gt;&#xA;  &lt;div class=&#34;recommendation__group&#34;&gt;&#xA;    &lt;div class=&#34;recommendation__category&#34;&gt;&#xA;      Books&#xA;    &lt;/div&gt;&#xA;    &lt;div class=&#34;recommendation__list&#34;&gt;&#xA;      &#xA;      &#xA;      &lt;div class=&#34;recommendation__item&#34;&gt;&#xA;        &lt;a href=&#34;https://www.engmanagement.dev&#34; class=&#34;recommendation__item-link&#34;&gt;&#xA;          &lt;span class=&#34;recommendation__item-title&#34;&gt;Engineering Management for the Rest of Us&lt;/span&gt;&#xA;          &lt;span class=&#34;recommendation__item-by&#34;&gt;Sarah Drasner&lt;/span&gt;&#xA;        &lt;/a&gt;&#xA;&#xA;        &#xA;        &lt;p class=&#34;recommendation__blurb&#34;&gt;I am a big fan of management books like this. Actionable content that takes you on a personal journey. I found myself taking notes of things I wanted to try out and understand more. I was an IC when I was reading this book, and still found value in it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction to APIs</title>
      <link>https://benmatselby.dev/post/2022/introduction-to-apis/</link>
      <pubDate>Mon, 14 Nov 2022 11:24:37 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2022/introduction-to-apis/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written this post to help some of my colleagues, who traditionally don&amp;rsquo;t work with APIs to understand some foundations. They are designers, product managers etc. If you&amp;rsquo;ve used APIs before, this post &lt;em&gt;is probably not for you&lt;/em&gt; ;-).&lt;/p&gt;&#xA;&lt;p&gt;An &amp;ldquo;Application Programming Interface&amp;rdquo; (API) allows two software systems to communicate in an agreed manner, set out by open specifications.&lt;/p&gt;&#xA;&lt;p&gt;We are going to focus on basic concepts to allow us to be able to communicate effectively about APIs, in an engineering product team. There will be a plethora of links to other sites with better content than this if you want to learn more.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How useful are code coverage reports?</title>
      <link>https://benmatselby.dev/post/2022/code-coverage-as-a-tool/</link>
      <pubDate>Sat, 05 Nov 2022 10:52:58 +0000</pubDate>
      <guid>https://benmatselby.dev/post/2022/code-coverage-as-a-tool/</guid>
      <description>&lt;p&gt;This post is going to talk about code coverage reports from unit tests. However, to provide some context first, I&amp;rsquo;m going to reminisce about 2010.&lt;/p&gt;&#xA;&lt;h2 id=&#34;a-story&#34;&gt;A story&lt;/h2&gt;&#xA;&lt;p&gt;Back in 2010, I was working for &lt;a href=&#34;https://www.plus.net&#34;&gt;Plusnet, an ISP in the UK&lt;/a&gt; (&lt;a href=&#34;https://www.plus.net/refer.php?strReferralsUid=f612ba7d23963c179e27ccabe44ecc45c38e8a51542adc4e0602250fdc677760&#34;&gt;Referral link&lt;/a&gt;). The engineering team were still getting to grips with unit testing our code. What we saw time and time again was many tests being written, high coverage reports, and management was happy. However, if you checked out a test, we saw that tests were running, and executing code, but they were not asserting anything. This meant the tests were more of a linter. So &lt;a href=&#34;https://github.com/sebastianbergmann/phpunit/commit/19feb8e3cd6c88dab46aebbd053fa26ecb8e3ea7&#34;&gt;I wrote&lt;/a&gt; the &lt;code&gt;--assert-strict&lt;/code&gt; feature in &lt;a href=&#34;https://phpunit.de&#34;&gt;PHPUnit&lt;/a&gt; (which has subsequently become &lt;code&gt;fail-on-incomplete&lt;/code&gt;). This helped us raise the quality of our tests at Plusnet.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use Keyhole to understand slow queries in MongoDB</title>
      <link>https://benmatselby.dev/post/use-keyhole-to-understand-slow-queries-in-mongo/</link>
      <pubDate>Wed, 02 Nov 2022 19:20:21 +0000</pubDate>
      <guid>https://benmatselby.dev/post/use-keyhole-to-understand-slow-queries-in-mongo/</guid>
      <description>&lt;p&gt;Slow queries are a part of life. This post will show you how to use &lt;a href=&#34;https://github.com/simagix/keyhole&#34;&gt;Keyhole&lt;/a&gt; to turn your MongoDB logs into a spreadsheet you can use to understand where to focus your efforts.&lt;/p&gt;&#xA;&lt;h2 id=&#34;keyhole&#34;&gt;Keyhole&lt;/h2&gt;&#xA;&lt;p&gt;First of all, get Keyhole up and running. Please &lt;a href=&#34;https://github.com/simagix/keyhole/tree/master/build&#34;&gt;follow their instructions&lt;/a&gt; on how to do this.&lt;/p&gt;&#xA;&lt;p&gt;I was able to do the following, but things change, so check out their docs for more relevant information.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/simagix/keyhole.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;cd&lt;/span&gt; keyhole&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go build main/keyhole.go&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./keyhole --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;simagix/keyhole devel-20221102&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;logs&#34;&gt;Logs&lt;/h2&gt;&#xA;&lt;p&gt;So now we want to download the logs from MongoDB. I&amp;rsquo;m going to use the logs from MongoDB Cloud Atlas. So first of all, make sure you&amp;rsquo;re logged into the platform and on the projects page.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Debugging Python with a virtual environment in VSCode</title>
      <link>https://benmatselby.dev/post/debugging-python-with-env-vscode/</link>
      <pubDate>Sun, 30 Oct 2022 14:35:10 +0000</pubDate>
      <guid>https://benmatselby.dev/post/debugging-python-with-env-vscode/</guid>
      <description>&lt;p&gt;My current job is mainly Python, so there was a steep learning curve. I have done some Python previously, but mainly for writing &lt;a href=&#34;https://github.com/benmatselby/sublime-phpcs&#34;&gt;Sublime&lt;/a&gt; &lt;a href=&#34;https://github.com/benmatselby/sublime-jenkins-dashboard&#34;&gt;Text&lt;/a&gt; &lt;a href=&#34;https://github.com/benmatselby/sublime-phpdocumentor&#34;&gt;plugins&lt;/a&gt; &lt;a href=&#34;https://github.com/benmatselby/sublime-pman&#34;&gt;back in the day&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Over the last few months, I’ve set up my VSCode environment on my work machine. Last night I was wanting to do something on a different machine. I could not remember how to debug Python code inside a virtual environment within VSCode!&lt;/p&gt;&#xA;&lt;p&gt;I kept getting this error&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upgrading to Next.js 13</title>
      <link>https://benmatselby.dev/post/upgrading-to-next-13/</link>
      <pubDate>Fri, 28 Oct 2022 20:07:19 +0100</pubDate>
      <guid>https://benmatselby.dev/post/upgrading-to-next-13/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://nextjs.org/blog/next-13&#34;&gt;Next.js 13 was released this week&lt;/a&gt;. I&amp;rsquo;ve not had much time to work with Netlify or Next.js recently. So this was a nice opportunity to play around again for an hour.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-upgrade-command&#34;&gt;The upgrade command&lt;/h2&gt;&#xA;&lt;p&gt;I wasn&amp;rsquo;t lucky enough to just run the headline upgrade command that the above blog post suggests.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recipes on  upgrade-to-next-13 via ⬡ v16.14.2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;at 19:30:07 ❯ npm i next@latest react@latest react-dom@latest eslint-config-next@latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! code ERESOLVE&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! ERESOLVE could not resolve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! While resolving: recipes@0.1.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! Found: next@12.3.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! node_modules/next&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!   next@&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;13.0.0&amp;#34;&lt;/span&gt; from the root project&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! Could not resolve dependency:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! next@&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;13.0.0&amp;#34;&lt;/span&gt; from the root project&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! Conflicting peer dependency: react@18.2.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! node_modules/react&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!   peer react@&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;^18.0.0-0&amp;#34;&lt;/span&gt; from next@13.0.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!   node_modules/next&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!     next@&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;13.0.0&amp;#34;&lt;/span&gt; from the root project&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! Fix the upstream dependency conflict, or retry&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! this &lt;span style=&#34;color:#24909d&#34;&gt;command&lt;/span&gt; with --force, or --legacy-peer-deps&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! to accept an incorrect (and potentially broken) dependency resolution.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! See /Users/ben/.npm/eresolve-report.txt &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; a full report.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR! A &lt;span style=&#34;color:#24909d&#34;&gt;complete&lt;/span&gt; log of this run can be found in:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm ERR!     /Users/ben/.npm/_logs/2022-10-28T18_30_14_743Z-debug-0.log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;this-is-what-i-did&#34;&gt;This is what I did&lt;/h2&gt;&#xA;&lt;p&gt;This is what I had to do, maybe this helps others.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mongo shell commands to get you through the day</title>
      <link>https://benmatselby.dev/post/mongosh-101/</link>
      <pubDate>Sun, 01 May 2022 15:35:41 +0100</pubDate>
      <guid>https://benmatselby.dev/post/mongosh-101/</guid>
      <description>&lt;p&gt;I recently started a new job. The data store is &lt;a href=&#34;https://www.mongodb.com&#34;&gt;MongoDB&lt;/a&gt;, which I have barely used before. This post aims to document what I&amp;rsquo;ve learnt to get me through the day. Please feel free to &lt;a href=&#34;http://twitter.com/benmatselby/photo&#34;&gt;tweet me&lt;/a&gt; if there are discrepancies.&lt;/p&gt;&#xA;&lt;p&gt;The first thing that I became aware of, is that there are/were two cli tools:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The legacy &lt;code&gt;mongo&lt;/code&gt; shell, which &lt;a href=&#34;https://www.mongodb.com/docs/manual/reference/program/mongo/&#34;&gt;was deprecated in MongoDB v5.0&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The new, and active, &lt;code&gt;mongosh&lt;/code&gt; shell, which replaced &lt;code&gt;mongo&lt;/code&gt;. The documentation for this shell is &lt;a href=&#34;https://www.mongodb.com/docs/mongodb-shell/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This post will discuss &lt;code&gt;mongosh&lt;/code&gt; and assume you have MongoDB running on your machine (or access to an instance).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Define a contract between autonomous teams</title>
      <link>https://benmatselby.dev/post/contractual-json/</link>
      <pubDate>Tue, 01 Mar 2022 20:11:07 +0000</pubDate>
      <guid>https://benmatselby.dev/post/contractual-json/</guid>
      <description>&lt;p&gt;So you have a bunch of autonomous engineering teams that are allowed to work in their own way. Fantastic. However, maybe you want to provide centralised support or build tooling that exposes things in a certain way. For example, maybe you want to build a department wide Open API documentation site for engineering teams and partners. You don&amp;rsquo;t want to enforce anything on the teams, such as making them all create specific folders in their repo. You do, however, need to know where certain files are.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multi-cursor support in Obsidian</title>
      <link>https://benmatselby.dev/post/obsidian-multi-cursor/</link>
      <pubDate>Thu, 03 Feb 2022 13:18:48 +0000</pubDate>
      <guid>https://benmatselby.dev/post/obsidian-multi-cursor/</guid>
      <description>&lt;p&gt;This post brings together two of my favourite things: Note taking, and multiple cursors. I remember the first time an engineer introduced me to &lt;a href=&#34;https://www.sublimetext.com&#34;&gt;Sublime Text&lt;/a&gt;. The main thing he would bang on about was multiple cursors. I was very quickly sold. It&amp;rsquo;s pure magic and speeds up so many things. I instantly switched from Eclipse PDT to Sublime Text.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve always liked writing notes, but always struggled with various tools. I have a work diary going back to 2009! I&amp;rsquo;ve used &lt;code&gt;vim&lt;/code&gt;, VSCode, Sublime Text, but they never really got it right. I have even tried hand writing notes in journals, it&amp;rsquo;s not for me, no matter how much I want it to be!&lt;/p&gt;</description>
    </item>
    <item>
      <title>The last few years</title>
      <link>https://benmatselby.dev/post/the-last-few-years/</link>
      <pubDate>Mon, 10 Jan 2022 21:19:57 +0000</pubDate>
      <guid>https://benmatselby.dev/post/the-last-few-years/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s nice to reflect on what you&amp;rsquo;ve achieved over a certain period of time. I switched roles within the same business in 2018. I went from managing and coding in a software engineering team I built from scratch, to an Individual Contributor role in a few other engineering teams. This post aims to show at a high level what I&amp;rsquo;ve been working on during this time. It&amp;rsquo;s just about in chronological order (from memory!). I&amp;rsquo;ve written this as a positive way to reflect on different achievements that would otherwise be forgotten. This isn&amp;rsquo;t everything I did, but certainly some highlights. Some of these items have been very tough to work on and see through to completion.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Books 2022</title>
      <link>https://benmatselby.dev/post/books-2022/</link>
      <pubDate>Mon, 03 Jan 2022 20:37:57 +0100</pubDate>
      <guid>https://benmatselby.dev/post/books-2022/</guid>
      <description>&lt;p&gt;Reading is good for you. It keeps the mind occupied. In 2019, I made a real effort to read as much as I could, and it was a good year. Certainly better than 2020, and 2021 at least. So this year, my aim is to read 20 books, which is 10 more than in 2019, and about 20 more than last year!&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll keep this post up to date throughout the year.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use Docker Context to switch between different solutions</title>
      <link>https://benmatselby.dev/post/docker-context/</link>
      <pubDate>Mon, 15 Nov 2021 18:54:13 +0000</pubDate>
      <guid>https://benmatselby.dev/post/docker-context/</guid>
      <description>&lt;p&gt;You may be on the lookout for a replacement to Docker Desktop &lt;a href=&#34;https://www.docker.com/blog/roi-of-docker-desktop-vs-diy-considerations-risks-and-benefits-for-business/&#34;&gt;at the moment&lt;/a&gt;. If you are, you may be wanting to trial the different solutions. You&amp;rsquo;re going to need to know what is involved, and what the different cost models include. This post is going to show you how you can use &lt;code&gt;docker context&lt;/code&gt; to run the different systems in parallel. The two solutions this post will cover are &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/start/&#34;&gt;minikube&lt;/a&gt; and &lt;a href=&#34;https://multipass.run&#34;&gt;multipass&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up a VS Code Dev Container - minikube</title>
      <link>https://benmatselby.dev/post/vscode-dev-containers-minikube/</link>
      <pubDate>Wed, 13 Oct 2021 11:44:20 +0100</pubDate>
      <guid>https://benmatselby.dev/post/vscode-dev-containers-minikube/</guid>
      <description>&lt;p&gt;This post builds on what we already learnt in &lt;a href=&#34;https://benmatselby.dev/post/vscode-dev-containers/&#34;&gt;Setting up a VS Code Dev Container&lt;/a&gt;. It&amp;rsquo;s more specific goal is to discuss running Dev Containers whilst using &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/&#34;&gt;minikube&lt;/a&gt; as a Docker Desktop replacement on the Mac.&lt;/p&gt;&#xA;&lt;p&gt;There is lots of chatter about the new license for Docker Desktop. The license changes impacts the business I work for. I wanted to know what our options were.&lt;/p&gt;&#xA;&lt;p&gt;Getting minikube as a drop in replacement for Docker Desktop on the Mac, was relatively straight forward.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with Jenkins: Language Agent</title>
      <link>https://benmatselby.dev/post/jenkins-language-agent/</link>
      <pubDate>Sat, 24 Apr 2021 21:18:37 +0100</pubDate>
      <guid>https://benmatselby.dev/post/jenkins-language-agent/</guid>
      <description>&lt;p&gt;This post follows on from the Jenkins series:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://benmatselby.dev/post/jenkins-basics/&#34;&gt;Getting started with Jenkins&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://benmatselby.dev/post/jenkins-basic-agent/&#34;&gt;Getting started with Jenkins: Agents&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This post is going to get you running a language specific Jenkins Agent. In the example we are going to follow, we will setup a Jenkins Agent running &lt;a href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt;. This means you will be able to run Go builds within your local Jenkins instance. This method can then be extrapolated to other languages.&lt;/p&gt;&#xA;&lt;p&gt;All of the example code used throughout this post is in a &lt;a href=&#34;https://github.com/benmatselby/jenkins-example&#34;&gt;GitHub Repo&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Terratest to test your infrastructure</title>
      <link>https://benmatselby.dev/post/terratest/</link>
      <pubDate>Sun, 18 Apr 2021 20:01:51 +0100</pubDate>
      <guid>https://benmatselby.dev/post/terratest/</guid>
      <description>&lt;p&gt;This post is going to get you started with using &lt;a href=&#34;https://terratest.gruntwork.io&#34;&gt;Terratest&lt;/a&gt; to help test your infrastructure changes. Terratest describes itself as:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A Go library that provides patterns and helper functions for testing infrastructure, with 1st-class support for Terraform, Packer, Docker, Kubernetes, AWS, GCP, and more.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Now that infrastructure is becoming code and configuration, we want to write tests that check that our infrastructure code works as intended. This is where Terratest can help. What I personally like about Terratest is the fact it can test many different systems. This means my team can utilise one tool for many testing scenarios.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Technical Roadmaps and Dev Sustainability</title>
      <link>https://benmatselby.dev/post/technical-roadmaps/</link>
      <pubDate>Wed, 14 Apr 2021 19:02:17 +0100</pubDate>
      <guid>https://benmatselby.dev/post/technical-roadmaps/</guid>
      <description>&lt;p&gt;At a high level, most engineers are working on product backlogs, in some way, shape, or form. What happens if that product backlog dries up? Or, as a manager or leader, you need to fill a period of uncertainty? This post is going to take you on my journey over the years, and put forward a solution that can be applied to small projects, large projects, and even at an organisational unit level.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terraform knowledge to get you through the day</title>
      <link>https://benmatselby.dev/post/terraform-101/</link>
      <pubDate>Sun, 11 Apr 2021 09:31:36 +0100</pubDate>
      <guid>https://benmatselby.dev/post/terraform-101/</guid>
      <description>&lt;p&gt;As part of the &amp;ldquo;&lt;a href=&#34;#see-also&#34;&gt;Getting through the day&lt;/a&gt;&amp;rdquo; series, this post is going to provide basic Terraform knowledge. We are going to setup a Terraform project that allows you to manage your repos in GitHub.&lt;/p&gt;&#xA;&lt;p&gt;I didn&amp;rsquo;t want to assume that you had an AWS, Azure, or Google Cloud account, but a GitHub account seemed more realistic.&lt;/p&gt;&#xA;&lt;p&gt;This post assumes that you have &lt;a href=&#34;https://www.terraform.io/downloads.html&#34;&gt;installed Terraform on your system&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cli&#34;&gt;CLI&lt;/h2&gt;&#xA;&lt;p&gt;Now that you have Terraform installed, you should be able to run &lt;code&gt;terraform&lt;/code&gt; in your terminal. For this tutorial I am running the following version:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with Jenkins: Agents</title>
      <link>https://benmatselby.dev/post/jenkins-basic-agent/</link>
      <pubDate>Wed, 07 Apr 2021 19:23:54 +0100</pubDate>
      <guid>https://benmatselby.dev/post/jenkins-basic-agent/</guid>
      <description>&lt;p&gt;Following on from &lt;a href=&#34;https://benmatselby.dev/post/jenkins-basics/&#34;&gt;Getting started with Jenkins&lt;/a&gt;, this post will get a Jenkins Agent up and running your builds. Please make sure you have completed the instructions on the &lt;a href=&#34;https://benmatselby.dev/post/jenkins-basics/&#34;&gt;previous post&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;We will run the Jenkins agents in docker containers, like we have for the controller.&lt;/p&gt;&#xA;&lt;p&gt;We need to adjust the &lt;code&gt;docker run&lt;/code&gt; command slightly this time around. But first, we need to define a Docker network. So let&amp;rsquo;s start with creating the Jenkins network.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with Jenkins</title>
      <link>https://benmatselby.dev/post/jenkins-basics/</link>
      <pubDate>Sat, 03 Apr 2021 20:42:29 +0100</pubDate>
      <guid>https://benmatselby.dev/post/jenkins-basics/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.jenkins.io/&#34;&gt;Jenkins&lt;/a&gt; is an automation application, that is heavily used for &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;Continuous Integration (CI)&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;Continuous Deployment/Delivery (CD)&lt;/a&gt;. This post is going to get Jenkins up and running, on your machine, and configuring a basic job. This can be handy if you are wanting to learn more about Jenkins, without using a hosted solution. It&amp;rsquo;s useful to be able to test Jenkins configurations in a disposable way. It&amp;rsquo;s not intended for this post to guide you on running a productionised Jenkins solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shell knowledge to get you through the day</title>
      <link>https://benmatselby.dev/post/shell-101/</link>
      <pubDate>Sun, 28 Mar 2021 15:01:33 +0000</pubDate>
      <guid>https://benmatselby.dev/post/shell-101/</guid>
      <description>&lt;p&gt;Following on from the &lt;a href=&#34;https://benmatselby.dev/post/docker-101/&#34;&gt;Docker knowledge to get you through the day&lt;/a&gt;, and &lt;a href=&#34;https://benmatselby.dev/post/git-101/&#34;&gt;Git commands to get you through the day&lt;/a&gt; posts, this will cover Shell commands. Once again, it aims to get you through the day.&lt;/p&gt;&#xA;&lt;p&gt;First of all, it&amp;rsquo;s worth noting that there are many shells: bash, sh, zsh etc. For a comprehensive list of shells, and their comparison, head over to &lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_command_shells&#34;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basic-commands&#34;&gt;Basic commands&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s cover off some basics that will hopefully get you on your way.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up a VS Code Dev Container</title>
      <link>https://benmatselby.dev/post/vscode-dev-containers/</link>
      <pubDate>Sun, 21 Mar 2021 09:15:35 +0000</pubDate>
      <guid>https://benmatselby.dev/post/vscode-dev-containers/</guid>
      <description>&lt;p&gt;Last week my team was tasked with picking up a project that I had last worked on 4 years ago. The deadline was tight, and we had a week to complete it. It was written in PHP, a language I&amp;rsquo;d barely written in the last 3 years. Obviously a lot has changed in 4 years (both in the language, setup, and the team I work in). I am the only engineer in my team now who knows PHP.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker knowledge to get you through the day</title>
      <link>https://benmatselby.dev/post/docker-101/</link>
      <pubDate>Mon, 15 Mar 2021 18:35:56 +0000</pubDate>
      <guid>https://benmatselby.dev/post/docker-101/</guid>
      <description>&lt;p&gt;Following on from the &amp;ldquo;&lt;a href=&#34;https://benmatselby.dev/post/git-101/&#34;&gt;Git commands to get you through the day&lt;/a&gt;&amp;rdquo; post, &lt;a href=&#34;https://github.com/paddymorgan84&#34;&gt;Paddy Morgan&lt;/a&gt; and I delivered a Docker 101 workshop today at work.&lt;/p&gt;&#xA;&lt;p&gt;This post covers what we ran through.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;Time allocation:&lt;/strong&gt; 60 minutes&lt;/p&gt;&#xA;&lt;p&gt;This workshop will be a high level overview of the basic docker commands you will use daily. It&amp;rsquo;s an entry level workshop, so if you&amp;rsquo;re comfortable with docker on the CLI, this probably isn&amp;rsquo;t for you.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git commands to get you through the day</title>
      <link>https://benmatselby.dev/post/git-101/</link>
      <pubDate>Fri, 12 Mar 2021 21:31:48 +0000</pubDate>
      <guid>https://benmatselby.dev/post/git-101/</guid>
      <description>&lt;p&gt;Since the start of the year, I&amp;rsquo;ve been running weekly workshops with &lt;a href=&#34;https://github.com/paddymorgan84&#34;&gt;Paddy Morgan&lt;/a&gt; at work. These have been fun sessions to run. Some have been chats, some demos etc.&lt;/p&gt;&#xA;&lt;p&gt;However, this week we ran a &amp;ldquo;Git 101&amp;rdquo; workshop. Weirdly, this was the most attended workshop we have run, with around 50 engineers joining throughout the hour session.&lt;/p&gt;&#xA;&lt;p&gt;This post covers what we ran through.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;Time allocation:&lt;/strong&gt; 60 minutes&lt;/p&gt;&#xA;&lt;p&gt;This workshop will be a high level overview of the basic git commands you will use daily. It&amp;rsquo;s an entry level workshop, so if you&amp;rsquo;re comfortable with git on the CLI, this probably isn&amp;rsquo;t for you.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Distributed, not Remote</title>
      <link>https://benmatselby.dev/post/distributed-not-remote/</link>
      <pubDate>Sun, 20 Dec 2020 14:40:23 +0000</pubDate>
      <guid>https://benmatselby.dev/post/distributed-not-remote/</guid>
      <description>&lt;p&gt;This year has seen a transformation in terms of working practices. Whether things will ever go back to the way they were, I do not know, but there is one thing I hope will remain.&lt;/p&gt;&#xA;&lt;p&gt;To sum up the last 3 years. I went from managing a team of engineers located in 2 geographic locations, to becoming a remote Individual Contributor in a co-located team. This year changed everything, and we all became engineers in a distributed team.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparison: AWS CodePipeline, GitHub Actions, and Jenkins</title>
      <link>https://benmatselby.dev/post/build-tool-comparison/</link>
      <pubDate>Thu, 14 May 2020 09:19:38 +0100</pubDate>
      <guid>https://benmatselby.dev/post/build-tool-comparison/</guid>
      <description>&lt;!-- markdownlint-disable MD033 --&gt;&#xA;&lt;div class=&#34;buildtool&#34;&gt;&#xA;  &lt;img src=&#34;https://benmatselby.dev/img/logo-aws-codepipeline.png&#34; alt=&#34;AWS CodePipeline&#34; class=&#34;buildtool__logo&#34; /&gt; &lt;img src=&#34;https://benmatselby.dev/img/logo-github.png&#34; alt=&#34;GitHub&#34; class=&#34;buildtool__logo&#34; /&gt; &lt;img src=&#34;https://benmatselby.dev/img/logo-jenkins.png&#34; alt=&#34;Jenkins&#34; class=&#34;buildtool__logo buildtool__logo-jenkins&#34; /&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;This post has come about as I&amp;rsquo;ve written up this content in different formats multiple times, and it&amp;rsquo;s easier to write this up once, and just reference back. The comparison is valid as of May 2020. If you visit this page after that, the comparison table may be different.&lt;/p&gt;&#xA;&lt;p&gt;The tools this post is going to compare are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/codepipeline/&#34;&gt;AWS CodePipeline&lt;/a&gt; (As I happen to be working in the AWS space at the moment)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.jenkins.io&#34;&gt;Jenkins&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;A couple of things to note:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Burndown reporting</title>
      <link>https://benmatselby.dev/post/burndown-reporting/</link>
      <pubDate>Sat, 02 May 2020 19:21:13 +0100</pubDate>
      <guid>https://benmatselby.dev/post/burndown-reporting/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re happy with the automated burndown reports from tools like &lt;a href=&#34;https://www.atlassian.com/software/jira&#34;&gt;Jira&lt;/a&gt; and &lt;a href=&#34;https://azure.microsoft.com/en-gb/services/devops/&#34;&gt;Azure Devops&lt;/a&gt;, then this post is &lt;em&gt;probably&lt;/em&gt; not for you (except maybe the &lt;a href=&#34;#cli-tools&#34;&gt;CLI tools section&lt;/a&gt;). If you prefer to manually generate a burndown report, or use a tool that doesn&amp;rsquo;t have that feature built in, then read on.&lt;/p&gt;&#xA;&lt;p&gt;My first foray into the world of work management tools starting about 13 years ago, and my team used &lt;a href=&#34;https://trac.edgewall.org&#34;&gt;Trac&lt;/a&gt;. At the time, if my memory is correct, it did not produce a burndown report. A colleague of mine, &lt;a href=&#34;https://twitter.com/stuartjsmith&#34;&gt;Stuart Smith&lt;/a&gt; introduced me to a manual spreadsheet burndown report, which I&amp;rsquo;ve tweaked and used pretty much ever since.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gollum Page Watcher GitHub Action</title>
      <link>https://benmatselby.dev/post/gollum-page-watcher-github-action/</link>
      <pubDate>Thu, 12 Mar 2020 18:39:53 +0000</pubDate>
      <guid>https://benmatselby.dev/post/gollum-page-watcher-github-action/</guid>
      <description>&lt;p&gt;Finding out when code changes in your project is easy. Whether it is version control, build notifications, GitHub/GitLab notifications, there are many delivery mechanisms to notify you.&lt;/p&gt;&#xA;&lt;p&gt;But what about all that documentation you spend a lot of time on. Curating your system, tweaking guidelines, and examples. How do you get teams of engineers to know about changes?&lt;/p&gt;&#xA;&lt;p&gt;There isn&amp;rsquo;t that many options in this space.&lt;/p&gt;&#xA;&lt;p&gt;If you are a Slack user, and if you use GitHub as your documentation/wiki space, then the &lt;a href=&#34;https://github.com/benmatselby/gollum-page-watcher-action&#34;&gt;Gollum Page Watcher&lt;/a&gt; can help.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logically atomic commits</title>
      <link>https://benmatselby.dev/post/logical-commits/</link>
      <pubDate>Sun, 23 Feb 2020 10:21:25 +0000</pubDate>
      <guid>https://benmatselby.dev/post/logical-commits/</guid>
      <description>&lt;p&gt;When forming a new team (or joining a team for that matter), I always try to get the following item in our code review standards, or ways of working.&lt;/p&gt;&#xA;&lt;quote class=&#34;pullquote&#34;&gt;&#xA;  &#xA;Make sure all commits in version control are logically atomic.&#xA;&#xA;&lt;/quote&gt;&#xA;&#xA;&lt;h2 id=&#34;what-is-a-logically-atomic-commit&#34;&gt;What is a logically atomic commit?&lt;/h2&gt;&#xA;&lt;p&gt;A logically atomic commit is the smallest, most meaningful change you can make to the software. It&amp;rsquo;s big enough to add value, but small enough to be manageable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo Deploy GitHub Action</title>
      <link>https://benmatselby.dev/post/hugo-deploy-github-action/</link>
      <pubDate>Sat, 15 Feb 2020 20:31:58 +0000</pubDate>
      <guid>https://benmatselby.dev/post/hugo-deploy-github-action/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve just released version &lt;a href=&#34;https://github.com/benmatselby/hugo-deploy-gh-pages/releases/tag/v1.2.1&#34;&gt;v1.2.1&lt;/a&gt; of the &lt;a href=&#34;https://github.com/benmatselby/hugo-deploy-gh-pages&#34;&gt;Hugo Deploy to GitHub Pages&lt;/a&gt; GitHub Action.&lt;/p&gt;&#xA;&lt;p&gt;This means it now fully conforms to the metadata specification as defined &lt;a href=&#34;https://help.github.com/en/actions/building-actions/metadata-syntax-for-github-actions&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I wrote this action back when GitHub Actions were still in beta, and there were very few actions out there. It turns out there are a plethora of GitHub Actions to now deploy a &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo site&lt;/a&gt; to GitHub Pages, but where is the fun in using someone else&amp;rsquo;s?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Books 2019</title>
      <link>https://benmatselby.dev/post/books-2019/</link>
      <pubDate>Sat, 05 Oct 2019 08:37:57 +0100</pubDate>
      <guid>https://benmatselby.dev/post/books-2019/</guid>
      <description>&lt;p&gt;One of my new years resolutions was to try and read 10 books this year. That may not sound a lot, but when you have a myriad of other things going on in your life, that&amp;rsquo;s a tall order. This is what I&amp;rsquo;ve managed to read.&lt;/p&gt;&#xA;&lt;div class=&#34;recommendation&#34;&gt;&#xA;  &lt;div class=&#34;recommendation__group&#34;&gt;&#xA;    &lt;div class=&#34;recommendation__category&#34;&gt;&#xA;      Books&#xA;    &lt;/div&gt;&#xA;    &lt;div class=&#34;recommendation__list&#34;&gt;&#xA;      &#xA;      &#xA;      &lt;div class=&#34;recommendation__item&#34;&gt;&#xA;        &lt;a href=&#34;https://www.waterstones.com/book/dark-sacred-night/michael-connelly/9781409182740&#34; class=&#34;recommendation__item-link&#34;&gt;&#xA;          &lt;span class=&#34;recommendation__item-title&#34;&gt;Dark Sacred Night&lt;/span&gt;&#xA;          &lt;span class=&#34;recommendation__item-by&#34;&gt;Michael Connelly&lt;/span&gt;&#xA;        &lt;/a&gt;&#xA;&#xA;        &#xA;        &lt;p class=&#34;recommendation__blurb&#34;&gt;I&amp;rsquo;m a massive Connelly fan, I&amp;rsquo;ve read and kept all the Bosch novels he&amp;rsquo;s ever written. I&amp;rsquo;m not a hoarder at all, but this is the only series of books I&amp;rsquo;ve kept. There seems to be a transition here with the introduction of Renée Ballard and I think she&amp;rsquo;s great. Maybe more of the Ballard books are to come, whilst the TV show focuses on Bosch?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Joining a new engineering team</title>
      <link>https://benmatselby.dev/post/joining-a-new-engineering-team/</link>
      <pubDate>Mon, 24 Jun 2019 21:44:23 +0100</pubDate>
      <guid>https://benmatselby.dev/post/joining-a-new-engineering-team/</guid>
      <description>&lt;p&gt;This post aims to cover off a simple checklist 📝 to work through when joining a new engineering team 👩🏾‍💻👨‍💻. Whilst this is aimed at senior or technical lead positions, these tips can help everyone.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve recently switched teams at work, and something dawned on me. Over the last 8 or so years I&amp;rsquo;ve generally built teams, and not really joined an existing team. So joining an existing team, with their own established ways of working, and existing decisions is something rather 👽 to me. This is also the first time, in the same period, where I am the only remote engineer on the team 😬.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Design Authority</title>
      <link>https://benmatselby.dev/post/design-authority/</link>
      <pubDate>Sun, 12 May 2019 14:45:29 +0100</pubDate>
      <guid>https://benmatselby.dev/post/design-authority/</guid>
      <description>&lt;p&gt;This post aims to cover off how to drive quality in your software products, by defining and using a &amp;ldquo;Design Authority&amp;rdquo;. It tries to call out what the problem is, and how you can use a self assessment to set the standard within your organisation, as to what is acceptable levels of quality within your product.&lt;/p&gt;&#xA;&lt;p&gt;There are many ways to assess software quality, be it using automation tools, top down assessments from a governance board, or peer reviewed assessments. As with most things in life, the best solution is probably a blend of many methodologies to get the desired outcome. This post will focus on peer reviewed assessments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Onboarding</title>
      <link>https://benmatselby.dev/post/onboarding/</link>
      <pubDate>Wed, 01 May 2019 06:30:41 +0100</pubDate>
      <guid>https://benmatselby.dev/post/onboarding/</guid>
      <description>&lt;p&gt;My aim with this blog is to document how I like to run my teams, and note the various things I&amp;rsquo;ve seen during my career. When meeting new people, there is a tendency to cover old ground (I&amp;rsquo;m skilled at this), which is useful in the sense you have a common understanding, but it can be time consuming. A few times recently I&amp;rsquo;ve wanted to provide substantial opinions, but the communication format doesn&amp;rsquo;t lend itself well to that style. With this in mind, I&amp;rsquo;m writing my thoughts down, so folks can read in an async manner, comfortable to them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running pa11y in Jenkins for accessibility testing</title>
      <link>https://benmatselby.dev/post/pa11y-accessibility-ci/</link>
      <pubDate>Wed, 24 Apr 2019 18:21:44 +0100</pubDate>
      <guid>https://benmatselby.dev/post/pa11y-accessibility-ci/</guid>
      <description>&lt;p&gt;The best thing about being a software engineer is all the learning you can do. I&amp;rsquo;m now working on a web based product where accessibility is critical to the success of the team, and therefore I&amp;rsquo;m in full learning mode at the moment.&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Web &lt;a href=&#34;https://twitter.com/hashtag/a11y?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#a11y&lt;/a&gt; is my new passion it seems. Don’t get me wrong it’s like day 4 of learning, but what a new world I find myself in! Raised two PRs into the project I’m working on. It’s rather overwhelming, but fun.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Software engineering team structures</title>
      <link>https://benmatselby.dev/post/software-engineering-team-structure/</link>
      <pubDate>Sat, 20 Apr 2019 15:50:51 +0100</pubDate>
      <guid>https://benmatselby.dev/post/software-engineering-team-structure/</guid>
      <description>&lt;p&gt;This post aims to outline a useful structure for software engineering teams. This feels like a fairly standard structure, or at least with the teams I’ve had exposure to. The main principles here are: to keep communication flowing; accountability is defined and understood; and the ability to scale horizontally when your teams become saturated (and for this to be easily quantified).&lt;/p&gt;&#xA;&lt;p&gt;For the purpose of this article, a team is going to be a product based software engineering team. This article does not delve too deeply with the structure above the team, only that the principles are still applicable. They will be fully accountable for delivering and supporting a couple of products. They use the scrum methodology (although this doesn&amp;rsquo;t really matter).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Feature Toggling</title>
      <link>https://benmatselby.dev/post/feature-toggling/</link>
      <pubDate>Tue, 19 Mar 2019 17:34:38 +0000</pubDate>
      <guid>https://benmatselby.dev/post/feature-toggling/</guid>
      <description>&lt;p&gt;As mentioned &lt;a href=&#34;https://benmatselby.dev/post/technology-radar/&#34;&gt;previously&lt;/a&gt;, we are documenting a whole bunch of stuff at my current gig. Documenting what tools and languages we should be using for our new products and platforms, but also what techniques we should be using. Techniques is an interesting area to be documenting, because how far do you go?&lt;/p&gt;&#xA;&lt;p&gt;Taking a step back, I&amp;rsquo;ve always wanted to be a conference speaker, ever since I saw &lt;a href=&#34;https://twitter.com/rowan_m&#34;&gt;my boss&lt;/a&gt; do a talk at &lt;a href=&#34;https://conference.phpnw.org.uk/&#34;&gt;PHPNW&lt;/a&gt; back in 2008 / 9. However, two factors have always stopped me:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why teams are important</title>
      <link>https://benmatselby.dev/post/why-teams-important/</link>
      <pubDate>Fri, 08 Mar 2019 08:08:22 +0000</pubDate>
      <guid>https://benmatselby.dev/post/why-teams-important/</guid>
      <description>&lt;p&gt;After talking about &lt;a href=&#34;https://benmatselby.dev/post/communication/&#34;&gt;communication&lt;/a&gt; recently, it felt natural to follow up with a post about Teams.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-beginning&#34;&gt;The beginning&lt;/h2&gt;&#xA;&lt;p&gt;I love teams. I love &lt;strong&gt;&lt;em&gt;my&lt;/em&gt;&lt;/strong&gt; teams. I love building teams. I love working in teams. I love to see what a team can deliver, and grow, and evolve, and have each others back. I would describe myself as a team player, first and foremost. I don&amp;rsquo;t like to be isolated. I like to have a home to anchor me. A team should feel natural, and a safe place for you all to be yourselves, and thrive. That is how you build a team.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Technology Radar</title>
      <link>https://benmatselby.dev/post/technology-radar/</link>
      <pubDate>Sun, 10 Feb 2019 19:06:55 +0000</pubDate>
      <guid>https://benmatselby.dev/post/technology-radar/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s all of a buzz at my current job at the moment. Change is in the air.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Stacks.&lt;/li&gt;&#xA;&lt;li&gt;Tools.&lt;/li&gt;&#xA;&lt;li&gt;Paradigms.&lt;/li&gt;&#xA;&lt;li&gt;The way we work.&lt;/li&gt;&#xA;&lt;li&gt;The way we deploy.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://benmatselby.dev/post/communication-tools/&#34;&gt;The way we communicate.&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;There is a lot to take in, and a lot to learn. Recently, I was one of two people who presented to our Project Management Office (PMO) on what was happening in our department. The main aspect of this presentation, and my life at work at the moment, was the Technology Radar.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The software development pipeline</title>
      <link>https://benmatselby.dev/post/pipelines/</link>
      <pubDate>Mon, 14 Jan 2019 19:29:09 +0000</pubDate>
      <guid>https://benmatselby.dev/post/pipelines/</guid>
      <description>&lt;p&gt;Pipelines.&lt;/p&gt;&#xA;&lt;p&gt;They are very important in software development, in my opinion. If you do not get your pipeline right, you likely have problems within your team(s).&lt;/p&gt;&#xA;&lt;p&gt;So, what is a pipeline?&lt;/p&gt;&#xA;&lt;p&gt;Well, think of it has a conveyor belt in a factory. The software development pipeline is a conveyor belt. From projects, to requirements, to building/testing, to deploying, and to everything in between. Those processes/items are moving along the conveyor, ideally in a smooth fashion.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Squashing commits</title>
      <link>https://benmatselby.dev/post/squashing-commits/</link>
      <pubDate>Tue, 02 Oct 2018 07:23:48 +0100</pubDate>
      <guid>https://benmatselby.dev/post/squashing-commits/</guid>
      <description>&lt;p&gt;I recently got involved in a project where I contributed a patch to an inflight feature branch. I then raised a Pull Request into the feature branch, so I could annotate the code in the GitHub PR to explain why I had done it a certain way. After a bit of back and forth the PR was merged into the feature branch.&lt;/p&gt;&#xA;&lt;p&gt;Later, I found that the feature branch I had worked on had been merged into master, but the entire branch was squashed down into one commit.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Development environments</title>
      <link>https://benmatselby.dev/post/development-environments/</link>
      <pubDate>Wed, 19 Sep 2018 07:32:05 +0100</pubDate>
      <guid>https://benmatselby.dev/post/development-environments/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;It works on my machine&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;We have all heard it, and secretly, we have all probably said it too. Setting up your development environment really is a thing. About 10 years ago, I remember spending about two weeks getting a full ISP platform up and running on my host machine. There were a lot of moving parts I didn’t understand in my first week. I was fairly junior at the time, and this was the first time I was doing development, to this level, on a Linux platform. There was a wiki page with step by step instructions, updated by each new starter along the way. The people with the least knowledge of the platform were the passing guardians of one of the most fundamental documents in the department. About 4 weeks later we had an offsite where I had to stand up and give a talk about my experience of joining the department and business. When I stood there, rabbit in headlights, I explained that the first two weeks were a complete waste of time. There were some shocked faces. I was so new, I was just blindly entering commands from a wiki page, not really understanding the why. It really did not add much value to me, nor the company. I would have rather fixed my first software bug in those two weeks, and then started to learn the mammoth platform, when I had more context.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SugarCRM deployment process</title>
      <link>https://benmatselby.dev/post/sugarcrm-deployment-process/</link>
      <pubDate>Sun, 26 Aug 2018 21:09:28 +0100</pubDate>
      <guid>https://benmatselby.dev/post/sugarcrm-deployment-process/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sugarcrm.com&#34;&gt;SugarCRM&lt;/a&gt; is a Customer Relationship Management system for both Enterprise and small business. I’ve worked on SugarCRM for around 6 years, and this post is going to cover off how we release/deploy the software on a 2 week cycle.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-aim&#34;&gt;The Aim&lt;/h2&gt;&#xA;&lt;p&gt;As with any software, the aim is to have an automated release process first and foremost. We wanted this process to be simple and allow for a completely automated release to our staging platform on a nightly basis. We wanted the release to the production platform to have some manual intervention so there was ownership and accountability.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Team communication tools</title>
      <link>https://benmatselby.dev/post/communication-tools/</link>
      <pubDate>Mon, 06 Aug 2018 07:30:00 +0100</pubDate>
      <guid>https://benmatselby.dev/post/communication-tools/</guid>
      <description>&lt;p&gt;In a &lt;a href=&#34;https://benmatselby.dev/post/communication/&#34;&gt;previous post&lt;/a&gt; I talked about communication, and what it’s like as a remote engineer. I also hinted at the tooling I prefer, and outlined what I look for. This post is going to cover off why I prefer &lt;a href=&#34;https://slack.com&#34;&gt;Slack&lt;/a&gt; for team chat/communication.&lt;/p&gt;&#xA;&lt;p&gt;Spanning a 10 year period I’ve used: IRC, &lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Wave&#34;&gt;Google Wave&lt;/a&gt;, XMPP in various forms, &lt;a href=&#34;https://www.skype.com/en/&#34;&gt;Skype&lt;/a&gt;, &lt;a href=&#34;https://hangouts.google.com&#34;&gt;GTalk and Google Hangouts&lt;/a&gt;, &lt;a href=&#34;https://slack.com&#34;&gt;Slack&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/education/products/teams/default.aspx&#34;&gt;Microsoft Teams&lt;/a&gt; and &lt;a href=&#34;https://en-gb.facebook.com/workplace&#34;&gt;Workplace&lt;/a&gt;. Slack is a clear winner for me, although at the time Google Wave blew me away.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Communication</title>
      <link>https://benmatselby.dev/post/communication/</link>
      <pubDate>Wed, 01 Aug 2018 12:08:10 +0100</pubDate>
      <guid>https://benmatselby.dev/post/communication/</guid>
      <description>&lt;p&gt;It’s cliched to say, but communication really is key, and yet it’s one of the common issues folks seem to raise in departmental or company feedback. “Communication isn’t great”. However, this is both a top down, and a bottom up issue in my opinion (and everything in between).&lt;/p&gt;&#xA;&lt;p&gt;Top down like to send out update emails, but the flow of communication is one way. Do I reply, reply all, face to face? Engagement here is not great.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
